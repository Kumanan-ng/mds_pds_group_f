,paste0(Country.Region,"-",Country.Region)
,paste0(Country.Region,"-",Province.State)
)
)
names(dat_confirmed)[names(dat_confirmed)=="value"]<-"confirmed"
dat_confirmed<-select(dat_confirmed,Location,Country.Region,Province.State,Date,confirmed)
dat_death<-melt(dat_death,id=c("Province.State","Country.Region","Lat","Long"))
dat_death$Date<-as.Date(gsub("X","",dat_death$variable),"%m.%d.%y")
dat_death<-mutate(dat_death,Location=if_else(dat_death$Province.State==""
,paste0(Country.Region,"-",Country.Region)
,paste0(Country.Region,"-",Province.State)
)
)
names(dat_death)[names(dat_death)=="value"]<-"death"
dat_death<-select(dat_death,Location,Country.Region,Province.State,Date,death)
dat_recovered<-melt(dat_recovered,id=c("Province.State","Country.Region","Lat","Long"))
dat_recovered$Date<-as.Date(gsub("X","",dat_recovered$variable),"%m.%d.%y")
dat_recovered<-mutate(dat_recovered,Location=if_else(dat_recovered$Province.State==""
,paste0(Country.Region,"-",Country.Region)
,paste0(Country.Region,"-",Province.State)
)
)
names(dat_recovered)[names(dat_recovered)=="value"]<-"recovered"
dat_recovered<-select(dat_recovered,Location,Country.Region,Province.State,Date,recovered)
dat_covid<-left_join(
left_join(dat_confirmed,dat_death
,by=c("Location","Country.Region","Province.State","Date"))
,dat_recovered,by=c("Location","Country.Region","Province.State","Date")
)
head(dat_covid)
dat_unique_location<-unique(dat_covid$Location)
func_R0_manual<-function(dat,l,N){
dat_temp<-filter(dat,Location==l,confirmed>0)
dat_temp<-dat_temp[order(dat_temp$Date),]
dat_temp<-mutate(dat_temp,week=week(Date)+(year(Date)-2020)*52
,N=N,R=death+recovered,I=confirmed-R,S=N-confirmed-death-recovered)
dat_temp_summ<-data.frame(summarise(group_by(dat_temp,Location,week)
,confirmed_min=min(confirmed)
,confirmed_max=max(confirmed)
,death_min=min(death)
,death_max=max(death)
,recovered_min=min(recovered)
,recovered_max=max(recovered)
,N=mean(N)
,S_min=min(S)
,S_max=max(S)
,I_min=min(I)
,I_max=max(I)
,R_min=min(R)
,R_max=max(R)
)
)
dat_temp_summ<-mutate(dat_temp_summ,dS=S_max-S_min,dI=I_max-I_min,dR=R_max-R_min
,beta=dS*N/I_min/S_min,gamma=dR/I_min,
R0=if_else(gamma==0,0,beta/gamma))
beta<-dat_temp_summ$beta[nrow(dat_temp_summ)]
dat<-left_join(dat_temp,dat_temp_summ,by=c("Location","week","N"))
}
a<-func_R0_manual(dat_covid,"Malaysia-Malaysia",31.95*1000000)
a
plot(a$R0,a$confirmed,type = "l")
a
a
a$Date[100]
a$Date[100]-a$Date[1]
as.numeric(a$Date[100]-a$Date[1])
func_R0_manual<-function(dat,l,N，date_future){
dat_temp<-filter(dat,Location==l,confirmed>0)
dat_temp<-dat_temp[order(dat_temp$Date),]
dat_temp<-mutate(dat_temp,week=week(Date)+(year(Date)-2020)*52
,N=N,R=death+recovered,I=confirmed-R,S=N-confirmed-death-recovered)
dat_temp_summ<-data.frame(summarise(group_by(dat_temp,Location,week)
,confirmed_min=min(confirmed)
,confirmed_max=max(confirmed)
,death_min=min(death)
,death_max=max(death)
,recovered_min=min(recovered)
,recovered_max=max(recovered)
,N=mean(N)
,S_min=min(S)
,S_max=max(S)
,I_min=min(I)
,I_max=max(I)
,R_min=min(R)
,R_max=max(R)
)
)
dat_temp_summ<-mutate(dat_temp_summ,dS=S_max-S_min,dI=I_max-I_min,dR=R_max-R_min
,beta=dS*N/I_min/S_min,gamma=dR/I_min,
R0=if_else(gamma==0,0,beta/gamma))
beta<-dat_temp_summ$beta[nrow(dat_temp_summ)]
dat_temp2<-left_join(dat_temp,dat_temp_summ,by=c("Location","week","N"))
if(max(dat_temp2$Date)>date_future){
return(dat_temp2)
}else{
for(i in 2:(as.numeric(a$Date[100]-a$Date[1])+1)){
if(i<=max(dat_temp2$Date)){
dat_temp2$dI_est[i]<-dat_temp2$I_min[i]*dat_temp2$S_min[i]/dat_temp2$N[i]-dat_temp2$gamma[i]*dat_temp2$I_min[i]
}
}
dat_temp2
}
}
a<-func_R0_manual(dat_covid,"Malaysia-Malaysia",31.95*1000000)
a<-func_R0_manual(dat_covid,"Malaysia-Malaysia",31.95*1000000,as.Date("2021-02-20","%Y-%m-%d"))
a<-func_R0_manual(dat_covid,"Malaysia-Malaysia",31.95*1000000,as.Date("2021-02-20","%Y-%m-%d"))
debug(func_R0_manual)
a<-func_R0_manual(dat_covid,"Malaysia-Malaysia",31.95*1000000,as.Date("2021-02-20","%Y-%m-%d"))
func_R0_manual<-function(dat,l,N，date_future){
dat_temp<-filter(dat,Location==l,confirmed>0)
dat_temp<-dat_temp[order(dat_temp$Date),]
dat_temp<-mutate(dat_temp,week=week(Date)+(year(Date)-2020)*52
,N=N,R=death+recovered,I=confirmed-R,S=N-confirmed-death-recovered)
dat_temp_summ<-data.frame(summarise(group_by(dat_temp,Location,week)
,confirmed_min=min(confirmed)
,confirmed_max=max(confirmed)
,death_min=min(death)
,death_max=max(death)
,recovered_min=min(recovered)
,recovered_max=max(recovered)
,N=mean(N)
,S_min=min(S)
,S_max=max(S)
,I_min=min(I)
,I_max=max(I)
,R_min=min(R)
,R_max=max(R)
)
)
dat_temp_summ<-mutate(dat_temp_summ,dS=S_max-S_min,dI=I_max-I_min,dR=R_max-R_min
,beta=dS*N/I_min/S_min,gamma=dR/I_min,
R0=if_else(gamma==0,0,beta/gamma))
beta<-dat_temp_summ$beta[nrow(dat_temp_summ)]
dat_temp2<-left_join(dat_temp,dat_temp_summ,by=c("Location","week","N"))
if(max(dat_temp2$Date)>date_future){
return(dat_temp2)
}else{
for(i in 2:(as.numeric(a$Date[100]-a$Date[1])+1)){
if(i<=dim(dat_temp2)[1]){
dat_temp2$dI_est[i]<-dat_temp2$I_min[i]*dat_temp2$S_min[i]/dat_temp2$N[i]-dat_temp2$gamma[i]*dat_temp2$I_min[i]
}
}
dat_temp2
}
}
a<-func_R0_manual(dat_covid,"Malaysia-Malaysia",31.95*1000000,as.Date("2021-02-20","%Y-%m-%d"))
func_R0_manual<-function(dat,l,N，date_future){
dat_temp<-filter(dat,Location==l,confirmed>0)
dat_temp<-dat_temp[order(dat_temp$Date),]
dat_temp<-mutate(dat_temp,week=week(Date)+(year(Date)-2020)*52
,N=N,R=death+recovered,I=confirmed-R,S=N-confirmed-death-recovered)
dat_temp_summ<-data.frame(summarise(group_by(dat_temp,Location,week)
,confirmed_min=min(confirmed)
,confirmed_max=max(confirmed)
,death_min=min(death)
,death_max=max(death)
,recovered_min=min(recovered)
,recovered_max=max(recovered)
,N=mean(N)
,S_min=min(S)
,S_max=max(S)
,I_min=min(I)
,I_max=max(I)
,R_min=min(R)
,R_max=max(R)
)
)
dat_temp_summ<-mutate(dat_temp_summ,dS=S_max-S_min,dI=I_max-I_min,dR=R_max-R_min
,beta=dS*N/I_min/S_min,gamma=dR/I_min,
R0=if_else(gamma==0,0,beta/gamma))
beta<-dat_temp_summ$beta[nrow(dat_temp_summ)]
dat_temp2<-left_join(dat_temp,dat_temp_summ,by=c("Location","week","N"))
if(max(dat_temp2$Date)>date_future){
return(dat_temp2)
}else{
for(i in 2:(as.numeric(date_futre-max(dat_temp2$Date))+1)){
if(i<=dim(dat_temp2)[1]){
dat_temp2$dI_est[i]<-dat_temp2$I_min[i]*dat_temp2$S_min[i]/dat_temp2$N[i]-dat_temp2$gamma[i]*dat_temp2$I_min[i]
}
}
dat_temp2
}
}
a<-func_R0_manual(dat_covid,"Malaysia-Malaysia",31.95*1000000,as.Date("2021-02-20","%Y-%m-%d"))
func_R0_manual<-function(dat,l,N，date_future){
dat_temp<-filter(dat,Location==l,confirmed>0)
dat_temp<-dat_temp[order(dat_temp$Date),]
dat_temp<-mutate(dat_temp,week=week(Date)+(year(Date)-2020)*52
,N=N,R=death+recovered,I=confirmed-R,S=N-confirmed-death-recovered)
dat_temp_summ<-data.frame(summarise(group_by(dat_temp,Location,week)
,confirmed_min=min(confirmed)
,confirmed_max=max(confirmed)
,death_min=min(death)
,death_max=max(death)
,recovered_min=min(recovered)
,recovered_max=max(recovered)
,N=mean(N)
,S_min=min(S)
,S_max=max(S)
,I_min=min(I)
,I_max=max(I)
,R_min=min(R)
,R_max=max(R)
)
)
dat_temp_summ<-mutate(dat_temp_summ,dS=S_max-S_min,dI=I_max-I_min,dR=R_max-R_min
,beta=dS*N/I_min/S_min,gamma=dR/I_min,
R0=if_else(gamma==0,0,beta/gamma))
beta<-dat_temp_summ$beta[nrow(dat_temp_summ)]
dat_temp2<-left_join(dat_temp,dat_temp_summ,by=c("Location","week","N"))
if(max(dat_temp2$Date)>date_future){
return(dat_temp2)
}else{
for(i in 2:(as.numeric(date_future-max(dat_temp2$Date))+1)){
if(i<=dim(dat_temp2)[1]){
dat_temp2$dI_est[i]<-dat_temp2$I_min[i]*dat_temp2$S_min[i]/dat_temp2$N[i]-dat_temp2$gamma[i]*dat_temp2$I_min[i]
}
}
dat_temp2
}
}
a<-func_R0_manual(dat_covid,"Malaysia-Malaysia",31.95*1000000,as.Date("2021-02-20","%Y-%m-%d"))
debug(func_R0_manual)
a<-func_R0_manual(dat_covid,"Malaysia-Malaysia",31.95*1000000,as.Date("2021-02-20","%Y-%m-%d"))
a<-func_R0_manual(dat_covid,"Malaysia-Malaysia",31.95*1000000,as.Date("2021-02-20","%Y-%m-%d"))
dat_temp2$I_min[i]
dat_temp2$I_min[i]
dat_temp2$S_min[i]
dat_temp2$N[i]
dat_temp2$I_min[i]*dat_temp2$S_min[i]/dat_temp2$N[i]
dat_temp2$gamma[i]*dat_temp2$I_min[i]
}
dat_temp2$gamma[i]*dat_temp2$I_min[i]
dat_temp2$I_min[i]*dat_temp2$S_min[i]/dat_temp2$N[i]-dat_temp2$gamma[i]*dat_temp2$I_min[i]
dat_temp2$dI_est[i]
func_R0_manual<-function(dat,l,N，date_future){
dat_temp<-filter(dat,Location==l,confirmed>0)
dat_temp<-dat_temp[order(dat_temp$Date),]
dat_temp<-mutate(dat_temp,week=week(Date)+(year(Date)-2020)*52
,N=N,R=death+recovered,I=confirmed-R,S=N-confirmed-death-recovered)
dat_temp_summ<-data.frame(summarise(group_by(dat_temp,Location,week)
,confirmed_min=min(confirmed)
,confirmed_max=max(confirmed)
,death_min=min(death)
,death_max=max(death)
,recovered_min=min(recovered)
,recovered_max=max(recovered)
,N=mean(N)
,S_min=min(S)
,S_max=max(S)
,I_min=min(I)
,I_max=max(I)
,R_min=min(R)
,R_max=max(R)
)
)
dat_temp_summ<-mutate(dat_temp_summ,dS=S_max-S_min,dI=I_max-I_min,dR=R_max-R_min
,beta=dS*N/I_min/S_min,gamma=dR/I_min,
R0=if_else(gamma==0,0,beta/gamma))
beta<-dat_temp_summ$beta[nrow(dat_temp_summ)]
dat_temp2<-left_join(dat_temp,dat_temp_summ,by=c("Location","week","N"))
if(max(dat_temp2$Date)>date_future){
return(dat_temp2)
}else{
dat_temp2$dI_est<-0
for(i in 2:(as.numeric(date_future-max(dat_temp2$Date))+1)){
if(i<=dim(dat_temp2)[1]){
dat_temp2$dI_est[i]<-dat_temp2$I_min[i]*dat_temp2$S_min[i]/dat_temp2$N[i]-dat_temp2$gamma[i]*dat_temp2$I_min[i]
}
}
dat_temp2
}
}
a<-func_R0_manual(dat_covid,"Malaysia-Malaysia",31.95*1000000,as.Date("2021-02-20","%Y-%m-%d"))
a
func_R0_manual<-function(dat,l,N，date_future){
dat_temp<-filter(dat,Location==l,confirmed>0)
dat_temp<-dat_temp[order(dat_temp$Date),]
dat_temp<-mutate(dat_temp,week=week(Date)+(year(Date)-2020)*52
,N=N,R=death+recovered,I=confirmed-R,S=N-confirmed-death-recovered)
dat_temp_summ<-data.frame(summarise(group_by(dat_temp,Location,week)
,confirmed_min=min(confirmed)
,confirmed_max=max(confirmed)
,death_min=min(death)
,death_max=max(death)
,recovered_min=min(recovered)
,recovered_max=max(recovered)
,N=mean(N)
,S_min=min(S)
,S_max=max(S)
,I_min=min(I)
,I_max=max(I)
,R_min=min(R)
,R_max=max(R)
)
)
dat_temp_summ<-mutate(dat_temp_summ,dS=S_max-S_min,dI=I_max-I_min,dR=R_max-R_min
,beta=dS*N/I_min/S_min,gamma=dR/I_min,
R0=if_else(gamma==0,0,beta/gamma))
beta<-dat_temp_summ$beta[nrow(dat_temp_summ)]
dat_temp2<-left_join(dat_temp,dat_temp_summ,by=c("Location","week","N"))
if(max(dat_temp2$Date)>date_future){
return(dat_temp2)
}else{
dat_temp2$dI_est<-0
for(i in 1:(as.numeric(date_future-max(dat_temp2$Date))+1)){
if(i<=dim(dat_temp2)[1]){
dat_temp2$dI_est[i]<-dat_temp2$I_min[i]*dat_temp2$S_min[i]/dat_temp2$N[i]-dat_temp2$gamma[i]*dat_temp2$I_min[i]
}
}
dat_temp2
}
}
a<-func_R0_manual(dat_covid,"Malaysia-Malaysia",31.95*1000000,as.Date("2021-02-20","%Y-%m-%d"))
a
func_R0_manual<-function(dat,l,N，date_future){
dat_temp<-filter(dat,Location==l,confirmed>0)
dat_temp<-dat_temp[order(dat_temp$Date),]
dat_temp<-mutate(dat_temp,week=week(Date)+(year(Date)-2020)*52
,N=N,R=death+recovered,I=confirmed-R,S=N-confirmed-death-recovered)
dat_temp_summ<-data.frame(summarise(group_by(dat_temp,Location,week)
,confirmed_min=min(confirmed)
,confirmed_max=max(confirmed)
,death_min=min(death)
,death_max=max(death)
,recovered_min=min(recovered)
,recovered_max=max(recovered)
,N=mean(N)
,S_min=min(S)
,S_max=max(S)
,I_min=min(I)
,I_max=max(I)
,R_min=min(R)
,R_max=max(R)
)
)
dat_temp_summ<-mutate(dat_temp_summ,dS=S_max-S_min,dI=I_max-I_min,dR=R_max-R_min
,beta=dS*N/I_min/S_min,gamma=dR/I_min,
R0=if_else(gamma==0,0,beta/gamma))
beta<-dat_temp_summ$beta[nrow(dat_temp_summ)]
dat_temp2<-left_join(dat_temp,dat_temp_summ,by=c("Location","week","N"))
if(max(dat_temp2$Date)>date_future){
return(dat_temp2)
}else{
dat_temp2$dI_est<-0
for(i in 1:(as.numeric(date_future-max(dat_temp2$Date))+1)){
if(i<=dim(dat_temp2)[1]){
dat_temp2$dI_est[i]<-dat_temp2$beta[i]*dat_temp2$I_min[i]*dat_temp2$S_min[i]/dat_temp2$N[i]-dat_temp2$gamma[i]*dat_temp2$I_min[i]
#dat_temp2$dS_est[i]<-dat_temp2$I_min[i]*dat_temp2$S_min[i]/dat_temp2$N[i]
}
}
dat_temp2
}
}
a<-func_R0_manual(dat_covid,"Malaysia-Malaysia",31.95*1000000,as.Date("2021-02-20","%Y-%m-%d"))
a
func_R0_manual<-function(dat,l,N，date_future){
dat_temp<-filter(dat,Location==l,confirmed>0)
dat_temp<-dat_temp[order(dat_temp$Date),]
dat_temp<-mutate(dat_temp,week=week(Date)+(year(Date)-2020)*52
,N=N,R=death+recovered,I=confirmed-R,S=N-confirmed-death-recovered)
dat_temp_summ<-data.frame(summarise(group_by(dat_temp,Location,week)
,confirmed_min=min(confirmed)
,confirmed_max=max(confirmed)
,death_min=min(death)
,death_max=max(death)
,recovered_min=min(recovered)
,recovered_max=max(recovered)
,N=mean(N)
,S_min=min(S)
,S_max=max(S)
,I_min=min(I)
,I_max=max(I)
,R_min=min(R)
,R_max=max(R)
)
)
dat_temp_summ<-mutate(dat_temp_summ,dS=S_min-S_max,dI=I_max-I_min,dR=R_max-R_min
,beta=-dS*N/I_min/S_min,gamma=dR/I_min,
R0=if_else(gamma==0,0,beta/gamma))
beta<-dat_temp_summ$beta[nrow(dat_temp_summ)]
dat_temp2<-left_join(dat_temp,dat_temp_summ,by=c("Location","week","N"))
if(max(dat_temp2$Date)>date_future){
return(dat_temp2)
}else{
dat_temp2$dI_est<-0
for(i in 1:(as.numeric(date_future-max(dat_temp2$Date))+1)){
if(i<=dim(dat_temp2)[1]){
dat_temp2$dI_est[i]<-dat_temp2$beta[i]*dat_temp2$I_min[i]*dat_temp2$S_min[i]/dat_temp2$N[i]-dat_temp2$gamma[i]*dat_temp2$I_min[i]
dat_temp2$dS_est[i]<-dat_temp2$I_min[i]*dat_temp2$S_min[i]/dat_temp2$N[i]
}
}
dat_temp2
}
}
a<-func_R0_manual(dat_covid,"Malaysia-Malaysia",31.95*1000000,as.Date("2021-02-20","%Y-%m-%d"))
a
func_R0_manual<-function(dat,l,N，date_future){
dat_temp<-filter(dat,Location==l,confirmed>0)
dat_temp<-dat_temp[order(dat_temp$Date),]
dat_temp<-mutate(dat_temp,week=week(Date)+(year(Date)-2020)*52
,N=N,R=death+recovered,I=confirmed-R,S=N-confirmed-death-recovered)
dat_temp_summ<-data.frame(summarise(group_by(dat_temp,Location,week)
,confirmed_min=min(confirmed)
,confirmed_max=max(confirmed)
,death_min=min(death)
,death_max=max(death)
,recovered_min=min(recovered)
,recovered_max=max(recovered)
,N=mean(N)
,S_min=min(S)
,S_max=max(S)
,I_min=min(I)
,I_max=max(I)
,R_min=min(R)
,R_max=max(R)
)
)
dat_temp_summ<-mutate(dat_temp_summ,dS=S_min-S_max,dI=I_max-I_min,dR=R_max-R_min
,beta=-dS*N/I_min/S_min,gamma=dR/I_min,
R0=if_else(gamma==0,0,beta/gamma))
beta<-dat_temp_summ$beta[nrow(dat_temp_summ)]
dat_temp2<-left_join(dat_temp,dat_temp_summ,by=c("Location","week","N"))
if(max(dat_temp2$Date)>date_future){
return(dat_temp2)
}else{
dat_temp2$dI_est<-0
for(i in 1:(as.numeric(date_future-max(dat_temp2$Date))+1)){
if(i<=dim(dat_temp2)[1]){
dat_temp2$dI_est[i]<-dat_temp2$beta[i]*dat_temp2$I_min[i]*dat_temp2$S_min[i]/dat_temp2$N[i]-dat_temp2$gamma[i]*dat_temp2$I_min[i]
dat_temp2$dS_est[i]<-(-dat_temp2$beta[i])*dat_temp2$I_min[i]*dat_temp2$S_min[i]/dat_temp2$N[i]
}
}
dat_temp2
}
}
a<-func_R0_manual(dat_covid,"Malaysia-Malaysia",31.95*1000000,as.Date("2021-02-20","%Y-%m-%d"))
a
shiny::runApp('C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/mds_pds_group_f')
library(shiny)
library(leaflet)
library(dplyr)
library(ggbeeswarm)
dat_hostel<-read.csv(file = "https://raw.githubusercontent.com/william-heng/mds_pds_group_f/main/Hostel.csv",stringsAsFactors = F)
dat_metro<-read.csv("https://raw.githubusercontent.com/william-heng/mds_pds_group_f/main/Japan_Metro.csv")
dat_metro_ori<-read.csv("https://raw.githubusercontent.com/william-heng/mds_pds_group_f/main/Japan_Metro_Ori.csv")
dat_hostel<-dat_hostel[apply(dat_hostel,1,function(X) !any(is.na(X))),]
dat_hostel<-filter(dat_hostel,price.from!=1003200)
dat_hostel$lon[dat_hostel$hostel.name=="Hostel J Culture 168" & dat_hostel$City=="Osaka"]<-135.4756563455386
dat_hostel$lat[dat_hostel$hostel.name=="Hostel J Culture 168" & dat_hostel$City=="Osaka"]<-34.74883461136703
dat_hostel$lon[dat_hostel$hostel.name=="Sakura Guest House" & dat_hostel$City=="Osaka"]<-135.50494191623136
dat_hostel$lat[dat_hostel$hostel.name=="Sakura Guest House" & dat_hostel$City=="Osaka"]<-34.66842726841171
dat_hostel <- dat_hostel %>% dplyr::rename(
HostelName = hostel.name,
StartingPrice = price.from,
RatingBand = rating.band,
RatingScore = summary.score,
Atmosphere = atmosphere,
Cleanliness = cleanliness,
Facilities = facilities,
Location = location.y,
Security = security,
Staff = staff,
ValueForMoney = valueformoney
)
names(dat_metro)[names(dat_metro)=="dist"]<-"Dist_Station"
dat_hostel<-left_join(dat_hostel,dat_metro,by="HostelName")
runApp('C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/mds_pds_group_f')
name(dat_hostel)
names(dat_hostel)
runApp('C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/mds_pds_group_f')
runApp('C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/mds_pds_group_f')
write.csv("C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/mds_pds_group_f/Hostel_cleaned"
,row.names = F)
source('C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/mds_pds_group_f/00 Data Cleaning.R')
source('C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/mds_pds_group_f/00 Data Cleaning.R')
dat_hostel<-read.csv(file = "https://raw.githubusercontent.com/william-heng/mds_pds_group_f/main/Hostel.csv",stringsAsFactors = F)
dat_metro<-read.csv("https://raw.githubusercontent.com/william-heng/mds_pds_group_f/main/Japan_Metro.csv")
dat_metro_ori<-read.csv("https://raw.githubusercontent.com/william-heng/mds_pds_group_f/main/Japan_Metro_Ori.csv")
dat_hostel<-dat_hostel[apply(dat_hostel,1,function(X) !any(is.na(X))),]
dat_hostel<-filter(dat_hostel,price.from!=1003200)
dat_hostel$lon[dat_hostel$hostel.name=="Hostel J Culture 168" & dat_hostel$City=="Osaka"]<-135.4756563455386
dat_hostel$lat[dat_hostel$hostel.name=="Hostel J Culture 168" & dat_hostel$City=="Osaka"]<-34.74883461136703
dat_hostel$lon[dat_hostel$hostel.name=="Sakura Guest House" & dat_hostel$City=="Osaka"]<-135.50494191623136
dat_hostel$lat[dat_hostel$hostel.name=="Sakura Guest House" & dat_hostel$City=="Osaka"]<-34.66842726841171
dat_hostel <- dat_hostel %>% dplyr::rename(
HostelName = hostel.name,
StartingPrice = price.from,
RatingBand = rating.band,
RatingScore = summary.score,
Atmosphere = atmosphere,
Cleanliness = cleanliness,
Facilities = facilities,
Location = location.y,
Security = security,
Staff = staff,
ValueForMoney = valueformoney
)
names(dat_metro)[names(dat_metro)=="dist"]<-"Dist_Station"
dat_hostel2<-left_join(dat_hostel,dat_metro,by="HostelName")
write.csv(dat_hostel2,"C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/mds_pds_group_f/Hostel_cleaned.csv"
,row.names = F)
dat_hostel<-read.csv("https://raw.githubusercontent.com/william-heng/mds_pds_group_f/main/Hostel_cleaned.csv")
dat_hostel
runApp('C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/mds_pds_group_f')
setwd("C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/mds_pds_group_f")
setwd("C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/mds_pds_group_f")
runApp()
runApp()
runApp()
runApp()
runApp()
