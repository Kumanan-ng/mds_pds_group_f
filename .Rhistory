,cleanliness>input$CL[1]
)
}
)
#dat_temp2<-reactive({select(dat_temp(),-lon:lat)})
output$out<-renderTable(reactive({select(dat_temp(),-lon,-lat,-Distance)})())
output$map2<-renderLeaflet(reactive({addAwesomeMarkers(addTiles(leaflet())
,lng=dat_temp()$lon
,lat=dat_temp()$lat)})
)
#output$out2<-renderText(input$CL[1])
}
)
shinyApp(ui, server)
server<-shinyServer(function(input,output){
dat_temp<-reactive({filter(dat_hostel
,cleanliness<=input$CL[2]
,cleanliness>input$CL[1]
)
}
)
#dat_temp2<-reactive({select(dat_temp(),-lon:lat)})
output$out<-renderTable(reactive({select(dat_temp(),-lon,-lat,-Distance)})())
output$mymap<-renderLeaflet(
addAwesomeMarkers(addTiles(leaflet())
,lng=dat_temp()$lon
,lat=dat_temp()$lat)
)
#output$out2<-renderText(input$CL[1])
}
)
shinyApp(ui, server)
ui <- shinyUI(fluidPage(
titlePanel("Japan Hostel")
#,addAwesomeMarkers(addTiles(leaflet())
#                  ,lng=dat_hostel$lon
#                  ,lat=dat_hostel$lat)
,leafletOutput("mymap")
,fluidRow(verbatimTextOutput("map_marker_click"))
,sidebarLayout(
sidebarPanel(
sliderInput("CL","Cleaniness"
,min=1,max=10,value = c(1,10),step=0.1))
,mainPanel(
tableOutput("out")
#,textOutput("out2")
)
)
)
)
server<-shinyServer(function(input,output){
dat_temp<-reactive({filter(dat_hostel
,cleanliness<=input$CL[2]
,cleanliness>input$CL[1]
)
}
)
#dat_temp2<-reactive({select(dat_temp(),-lon:lat)})
output$out<-renderTable(reactive({select(dat_temp(),-lon,-lat,-Distance)})())
output$mymap<-renderLeaflet(
addAwesomeMarkers(addTiles(leaflet())
,lng=dat_temp()$lon
,lat=dat_temp()$lat)
)
#output$out2<-renderText(input$CL[1])
}
)
shinyApp(ui, server)
library(tidygeocoder)
geo("Shibuya metro Station, Tokyo, Japan")
geo("渋谷")
geo("渋谷駅")
geo("渋谷駅 subway")
geo("渋谷スクランブルスクエア東棟と渋谷駅地下出口番号変更")
geo("Kuala Lumpur")
geo("Kuala Lumpur",method = 'osm')
geo("Shibuya metro station, tokyo, japan",method = 'osm')
geo("渋谷駅",method = 'osm')
dat_hostel
geo("表参道駅",method = 'osm')
dat<-read.csv(paste0("C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/Japan Metro Station.csv")
,stringsAsFactors = F)
geo(dat$Station2,method = 'osm')
dat
dat<-read_excel(paste0("C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/Japan Metro Station.csv")
,stringsAsFactors = F)
library(readxl)
dat<-read_excel(paste0("C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/Japan Metro Station.csv")
,stringsAsFactors = F)
dat<-read_excel(paste0("C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/Japan Metro Station.csv")
dat<-read_excel(paste0("C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/Japan Metro Station.csv"))
dat<-read_excel(paste0("C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/Japan Metro Station.csv")
dat<-read_excel(paste0("C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/Japan Metro Station.csv"))
dat<-read_excel(paste0("C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/Japan Metro Station.xlsx"))
dat
geo(dat$Station2,method = 'osm')
dat$Station2
a<-geo(dat$Station2,method = 'osm')
a
a$lat
ui <- shinyUI(fluidPage(
titlePanel("Japan Hostel")
,leafletOutput("mymap")
,fluidRow(verbatimTextOutput("map_marker_click"))
,sidebarLayout(
sidebarPanel(
selectInput("city","City : ", c("All",unique(dat_hostel$City)))
,sliderInput("CL","Cleaniness"
,min=1,max=10,value = c(1,10),step=0.1))
,mainPanel(
tableOutput("out")
#,textOutput("out2")
)
)
)
)
server<-shinyServer(function(input,output){
dat_temp<-reactive({filter(dat_hostel
,cleanliness<=input$CL[2]
,cleanliness>input$CL[1]
)
}
)
#dat_temp2<-reactive({select(dat_temp(),-lon:lat)})
output$out<-renderTable(reactive({select(dat_temp(),-lon,-lat,-Distance)})())
output$mymap<-renderLeaflet(
addAwesomeMarkers(addTiles(leaflet())
,lng=dat_temp()$lon
,lat=dat_temp()$lat)
)
#output$out2<-renderText(input$CL[1])
}
)
shinyApp(ui, server)
dat_hostel
server<-shinyServer(function(input,output){
dat_temp<-reactive({
if (input$city=="All"){
dat_hostel
}else{
filter(dat_hostel,City==input$city)
}
}
)
dat_temp2<-reactive({filter(dat_temp()
,cleanliness<=input$CL[2]
,cleanliness>input$CL[1]
)
}
)
#dat_temp2<-reactive({select(dat_temp(),-lon:lat)})
output$out<-renderTable(reactive({select(dat_temp2(),-lon,-lat,-Distance)})())
output$mymap<-renderLeaflet(
addAwesomeMarkers(addTiles(leaflet())
,lng=dat_temp()$lon
,lat=dat_temp()$lat)
)
#output$out2<-renderText(input$CL[1])
}
)
shinyApp(ui, server)
server<-shinyServer(function(input,output){
dat_temp<-reactive({
if (input$city=="All"){
dat_hostel
}else{
filter(dat_hostel,City==input$city)
}
}
)
dat_temp2<-reactive({filter(dat_temp()
,cleanliness<=input$CL[2]
,cleanliness>input$CL[1]
)
}
)
#dat_temp2<-reactive({select(dat_temp(),-lon:lat)})
output$out<-renderTable(reactive({select(dat_temp2(),-lon,-lat,-Distance)})())
output$mymap<-renderLeaflet(
addAwesomeMarkers(addTiles(leaflet())
,lng=dat_temp2()$lon
,lat=dat_temp2()$lat)
)
#output$out2<-renderText(input$CL[1])
}
)
shinyApp(ui, server)
source('~/.active-rstudio-document')
require(shiny)
if (interactive()) {
ui <- fluidPage(
column(4,
sliderInput('x',label='Num Rows',min=2,max=30,step=1,value=3,animate = TRUE),
textInput('tbl_nm',label='Data Set',value='cars'),
br(),
actionButton("button", "Show")
),
column(8, tableOutput("table"))
)
server <- function(input, output) {
# reactively adjust the number of rows
ll <- eventReactive(input$x,{
input$x
})
# change the data sets after clicking the button
dat <- eventReactive(input$button,{
if(input$tbl_nm=='cars'){
dat <- cars
} else {
dat <- get(input$tbl_nm)
}
return(dat)
})
# Take a reactive dependency on input$button, but
# not on any of the stuff inside the function
df <- eventReactive(input$button, {
yy <- ll()
# choose only the relevant data...
head(dat(),yy)
})
# show the final table
output$table <- renderTable({
if(input$button==0){
# show the first few lines of cars at the begining
head(cars, ll())
} else {
# show the selected data
df()
}
})
}
shinyApp(ui=ui, server=server)
}
runApp('C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/Shinny.R')
library(shiny); runApp('C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/mds_pds_group_f/Shinny.R')
runApp('C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/mds_pds_group_f/Shinny.R')
library(dplyr)
library(psych)
library(leaflet)
Folder<-"C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/"
dat_hostel<-read.csv(paste0(Folder,"Hostel.csv"),stringsAsFactors = F)
library(dplyr)
library(psych)
library(leaflet)
Folder<-"https://raw.githubusercontent.com/william-heng/mds_pds_group_f/main/"
dat_hostel<-read.csv(paste0(Folder,"Hostel.csv"),stringsAsFactors = F)
dim(dat_hostel)
dat_hostel<-dat_hostel[apply(dat_hostel,1,function(X) !any(is.na(X))),]
dat_hostel
dim(dat_hostel)
summarise(group_by(dat_hostel,City),`Hostel Count`=n())
plot(filter(dat_hostel$lon,City=="Tokyo"),filter(dat_hostel$lat,City=="Tokyo"))
plot(filter(dat_hostel,City=="Tokyo")$lon,filter(dat_hostel,City=="Tokyo")$lat)
col_select<-c("Distance","summary.score","atmosphere","cleanliness"
,"facilities","location.y","security","staff","valueformoney","lat","lon")
func_norm<-function(x){
x_mean=mean(x,na.rm = T)
sd_mean=sd(x,na.rm = T)
return((x-x_mean)/sd_mean)
}
dat_tk<-filter(dat_hostel,City=="Tokyo",price.from!=1003200)
dat_os<-filter(dat_hostel,City=="Osaka",price.from!=1003200)
dat_ky<-filter(dat_hostel,City=="Kyoto",price.from!=1003200)
dat_tk2<-mutate_at(dat_tk,col_select,func_norm)
dat_os2<-mutate_at(dat_os,col_select,func_norm)
dat_ky2<-mutate_at(dat_ky,col_select,func_norm)
dat_tk2
dat_os2
dat_ky2
plot(dat_tk2$lon,dat_tk2$lat)
plot(dat_os2$lon,dat_os2$lat)
plot(dat_ky2$lon,dat_ky2$lat)
plot(dat_os2$lon,dat_os2$lat)
filter(dat_tk2,lon>1)
filter(dat_tk2,abs(lon)>1 | abs(lat)>1)
filter(dat_tk2,abs(lon)>2 | abs(lat)>2)
filter(dat_tk2,abs(lon)>3 | abs(lat)>3)
filter(dat_os2,abs(lon)>3 | abs(lat)>3)
filter(dat_ky2,abs(lon)>3 | abs(lat)>3)
summarise(group_by(dat_hostel,City),`Hostel Count`=n())
dat_hs2<-mutate_at(dat_hs,col_select,func_norm)
dat_hs<-filter(dat_hostel,City=="Hiroshima",price.from!=1003200)
dat_fc<-filter(dat_hostel,City=="Hiroshima",price.from!=1003200)
dat_tk2<-mutate_at(dat_tk,col_select,func_norm)
dat_os2<-mutate_at(dat_os,col_select,func_norm)
dat_ky2<-mutate_at(dat_ky,col_select,func_norm)
dat_hs2<-mutate_at(dat_hs,col_select,func_norm)
dat_fc2<-mutate_at(dat_fc,col_select,func_norm)
filter(dat_tk2,abs(lon)>3 | abs(lat)>3)
filter(dat_os2,abs(lon)>3 | abs(lat)>3)
filter(dat_tk2,abs(lon)>3 | abs(lat)>3)
filter(dat_os2,abs(lon)>3 | abs(lat)>3)
filter(dat_ky2,abs(lon)>3 | abs(lat)>3)
filter(dat_hs2,abs(lon)>3 | abs(lat)>3)
filter(dat_fc2,abs(lon)>3 | abs(lat)>3)
filter(dat_os2,abs(lon)>3 | abs(lat)>3)
dat_hostel
dat_hostel$lon[dat_hostel$hostel.name=="Hostel J Culture 168" & dat_hostel$City=="Osaka"]
runApp('C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/mds_pds_group_f/Shinny.R')
dat_hostel<-read.csv(paste0(Folder,"Hostel.csv"),stringsAsFactors = F)
dim(dat_hostel)
dat_hostel<-dat_hostel[apply(dat_hostel,1,function(X) !any(is.na(X))),]
dat_hostel$lon[dat_hostel$hostel.name=="Hostel J Culture 168" & dat_hostel$City=="Osaka"]<-135.4756563455386
dat_hostel$lat[dat_hostel$hostel.name=="Hostel J Culture 168" & dat_hostel$City=="Osaka"]<-34.74883461136703
dat_hostel$lon[dat_hostel$hostel.name=="Sakura Guest House" & dat_hostel$City=="Osaka"]<-135.50494191623136
dat_hostel$lat[dat_hostel$hostel.name=="Sakura Guest House" & dat_hostel$City=="Osaka"]<-34.66842726841171
dim(dat_hostel)
summarise(group_by(dat_hostel,City),`Hostel Count`=n())
col_select<-c("Distance","summary.score","atmosphere","cleanliness"
,"facilities","location.y","security","staff","valueformoney","lat","lon")
func_norm<-function(x){
x_mean=mean(x,na.rm = T)
sd_mean=sd(x,na.rm = T)
return((x-x_mean)/sd_mean)
}
dat_tk<-filter(dat_hostel,City=="Tokyo",price.from!=1003200)
dat_os<-filter(dat_hostel,City=="Osaka",price.from!=1003200)
dat_ky<-filter(dat_hostel,City=="Kyoto",price.from!=1003200)
dat_hs<-filter(dat_hostel,City=="Hiroshima",price.from!=1003200)
dat_fc<-filter(dat_hostel,City=="Hiroshima",price.from!=1003200)
dat_tk2<-mutate_at(dat_tk,col_select,func_norm)
dat_os2<-mutate_at(dat_os,col_select,func_norm)
dat_ky2<-mutate_at(dat_ky,col_select,func_norm)
dat_hs2<-mutate_at(dat_hs,col_select,func_norm)
dat_fc2<-mutate_at(dat_fc,col_select,func_norm)
dat_tk2
dat_os2
dat_ky2
filter(dat_tk2,abs(lon)>3 | abs(lat)>3)
filter(dat_os2,abs(lon)>3 | abs(lat)>3)
filter(dat_ky2,abs(lon)>3 | abs(lat)>3)
filter(dat_hs2,abs(lon)>3 | abs(lat)>3)
filter(dat_fc2,abs(lon)>3 | abs(lat)>3)
filter(dat_tk2,abs(lon)>3 | abs(lat)>3)
filter(dat_os2,abs(lon)>3 | abs(lat)>3)
plot(dat_os$lat,dat_os2$lon)
runApp('C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/mds_pds_group_f/Shinny.R')
filter(dat_os,lon<34.5)
filter(dat_os,lat<34.5)
plot(dat_os$lat,dat_os2$lon)
filter(dat_os,lat<34.5)
runApp('C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/mds_pds_group_f/Shinny.R')
runApp('C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/mds_pds_group_f/Shinny.R')
plot(dat_os$lat,dat_os2$lon)
filter(dat_os,lat>=34.8)
runApp('C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/mds_pds_group_f/Shinny.R')
runApp('C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/mds_pds_group_f/Shinny.R')
runApp('C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/mds_pds_group_f/Shinny.R')
runApp('C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/mds_pds_group_f/Shinny.R')
runApp('C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/mds_pds_group_f/Shinny.R')
col_select<-c("Distance","summary.score","atmosphere","cleanliness"
,"facilities","location.y","security","staff","valueformoney","lat","lon")
func_norm<-function(x){
x_mean=mean(x,na.rm = T)
sd_mean=sd(x,na.rm = T)
return((x-x_mean)/sd_mean)
}
dat_tk<-filter(dat_hostel,City=="Tokyo",price.from!=1003200)
library(dplyr)
library(psych)
library(leaflet)
Folder<-"https://raw.githubusercontent.com/william-heng/mds_pds_group_f/main/"
dat_hostel<-read.csv(paste0(Folder,"Hostel.csv"),stringsAsFactors = F)
dim(dat_hostel)
dat_hostel<-dat_hostel[apply(dat_hostel,1,function(X) !any(is.na(X))),]
dat_hostel$lon[dat_hostel$hostel.name=="Hostel J Culture 168" & dat_hostel$City=="Osaka"]<-135.4756563455386
dat_hostel$lat[dat_hostel$hostel.name=="Hostel J Culture 168" & dat_hostel$City=="Osaka"]<-34.74883461136703
dat_hostel$lon[dat_hostel$hostel.name=="Sakura Guest House" & dat_hostel$City=="Osaka"]<-135.50494191623136
dat_hostel$lat[dat_hostel$hostel.name=="Sakura Guest House" & dat_hostel$City=="Osaka"]<-34.66842726841171
dat_hostel$lon[dat_hostel$hostel.name=="Goen Loungeï¼†Stay" & dat_hostel$City=="Osaka"]<-135.65050963620374
dat_hostel$lat[dat_hostel$hostel.name=="Goen Loungeï¼†Stay" & dat_hostel$City=="Osaka"]<-34.815576171143135
dim(dat_hostel)
summarise(group_by(dat_hostel,City),`Hostel Count`=n())
col_select<-c("Distance","summary.score","atmosphere","cleanliness"
,"facilities","location.y","security","staff","valueformoney","lat","lon")
func_norm<-function(x){
x_mean=mean(x,na.rm = T)
sd_mean=sd(x,na.rm = T)
return((x-x_mean)/sd_mean)
}
dat_tk<-filter(dat_hostel,City=="Tokyo",price.from!=1003200)
dat_os<-filter(dat_hostel,City=="Osaka",price.from!=1003200)
dat_ky<-filter(dat_hostel,City=="Kyoto",price.from!=1003200)
dat_hs<-filter(dat_hostel,City=="Hiroshima",price.from!=1003200)
dat_fc<-filter(dat_hostel,City=="Hiroshima",price.from!=1003200)
dat_tk2<-mutate_at(dat_tk,col_select,func_norm)
dat_os2<-mutate_at(dat_os,col_select,func_norm)
dat_ky2<-mutate_at(dat_ky,col_select,func_norm)
dat_hs2<-mutate_at(dat_hs,col_select,func_norm)
dat_fc2<-mutate_at(dat_fc,col_select,func_norm)
dat_tk2
dat_os2
dat_ky2
filter(dat_tk2,abs(lon)>3 | abs(lat)>3)
filter(dat_os2,abs(lon)>3 | abs(lat)>3)
filter(dat_ky2,abs(lon)>3 | abs(lat)>3)
filter(dat_hs2,abs(lon)>3 | abs(lat)>3)
filter(dat_fc2,abs(lon)>3 | abs(lat)>3)
plot(dat_os$lat,dat_os2$lon)
filter(dat_os,lat>=34.8)
dat_hostel
ggplot(dat_hostel, aes(x=summary.score, y=price.from,col=City, shape=City)) + geom_point()
library(ggplot2)
ggplot(dat_hostel, aes(x=summary.score, y=price.from,col=City, shape=City)) + geom_point()
dat_hostel<-filter(dat_hostel,price.from!=1003200)
ggplot(dat_hostel, aes(x=summary.score, y=price.from,col=City, shape=City)) + geom_point()
ggplot(dat_hostel, aes(x=summary.score, y=price.from,col=City)) + geom_point()
source('~/.active-rstudio-document')
library(shiny)
library(leaflet)
r_colors <- rgb(t(col2rgb(colors()) / 255))
names(r_colors) <- colors()
ui <- fluidPage(
leafletOutput("mymap"),
p(),
actionButton("recalc", "New points")
)
server <- function(input, output, session) {
points <- eventReactive(input$recalc, {
cbind(rnorm(40) * 2 + 13, rnorm(40) + 48)
}, ignoreNULL = FALSE)
output$mymap <- renderLeaflet({
leaflet() %>%
addProviderTiles(providers$Stamen.TonerLite,
options = providerTileOptions(noWrap = TRUE)
) %>%
addMarkers(data = points())
})
}
shinyApp(ui, server)
runApp('C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/mds_pds_group_f/Shinny.R')
?addAwesomeMarkers
runApp('C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/mds_pds_group_f/Shinny.R')
shiny::runApp('C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/mds_pds_group_f')
runApp('C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/mds_pds_group_f')
library(shiny)
library(leaflet)
library(dplyr)
dat_hostel<-read.csv(file = "Hostel.csv",stringsAsFactors = F)
dat_hostel<-dat_hostel[apply(dat_hostel,1,function(X) !any(is.na(X))),]
dat_hostel<-filter(dat_hostel,price.from!=1003200)
dat_hostel$lon[dat_hostel$hostel.name=="Hostel J Culture 168" & dat_hostel$City=="Osaka"]<-135.4756563455386
dat_hostel$lat[dat_hostel$hostel.name=="Hostel J Culture 168" & dat_hostel$City=="Osaka"]<-34.74883461136703
dat_hostel$lon[dat_hostel$hostel.name=="Sakura Guest House" & dat_hostel$City=="Osaka"]<-135.50494191623136
dat_hostel$lat[dat_hostel$hostel.name=="Sakura Guest House" & dat_hostel$City=="Osaka"]<-34.66842726841171
dat_hostel <- dat_hostel %>% dplyr::rename(
HostelName = hostel.name,
StartingPrice = price.from,
RatingBand = rating.band,
RatingScore = summary.score,
Atmosphere = atmosphere,
Cleanliness = cleanliness,
Facilities = facilities,
Location = location.y,
Security = security,
Staff = staff,
ValueForMoney = valueformoney
)
runApp('C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/mds_pds_group_f')
library(shiny)
library(leaflet)
library(dplyr)
dat_hostel<-read.csv(file = "Hostel.csv",stringsAsFactors = F)
library(shiny)
library(leaflet)
library(dplyr)
dat_hostel<-read.csv(file = "Hostel.csv",stringsAsFactors = F)
dat_hostel<-dat_hostel[apply(dat_hostel,1,function(X) !any(is.na(X))),]
dat_hostel<-filter(dat_hostel,price.from!=1003200)
dat_hostel$lon[dat_hostel$hostel.name=="Hostel J Culture 168" & dat_hostel$City=="Osaka"]<-135.4756563455386
dat_hostel$lat[dat_hostel$hostel.name=="Hostel J Culture 168" & dat_hostel$City=="Osaka"]<-34.74883461136703
dat_hostel$lon[dat_hostel$hostel.name=="Sakura Guest House" & dat_hostel$City=="Osaka"]<-135.50494191623136
getdw()
getwd()
dat_hostel<-read.csv(file = "./Hostel.csv",stringsAsFactors = F)
dat_hostel<-read.csv(file = ".\Hostel.csv",stringsAsFactors = F)
dat_hostel<-read.csv(file = "https://raw.githubusercontent.com/william-heng/mds_pds_group_f/main/Hostel.csv",stringsAsFactors = F)
dat_hostel<-dat_hostel[apply(dat_hostel,1,function(X) !any(is.na(X))),]
dat_hostel<-filter(dat_hostel,price.from!=1003200)
dat_hostel$lon[dat_hostel$hostel.name=="Hostel J Culture 168" & dat_hostel$City=="Osaka"]<-135.4756563455386
dat_hostel$lat[dat_hostel$hostel.name=="Hostel J Culture 168" & dat_hostel$City=="Osaka"]<-34.74883461136703
dat_hostel$lon[dat_hostel$hostel.name=="Sakura Guest House" & dat_hostel$City=="Osaka"]<-135.50494191623136
dat_hostel$lat[dat_hostel$hostel.name=="Sakura Guest House" & dat_hostel$City=="Osaka"]<-34.66842726841171
dat_hostel <- dat_hostel %>% dplyr::rename(
HostelName = hostel.name,
StartingPrice = price.from,
RatingBand = rating.band,
RatingScore = summary.score,
Atmosphere = atmosphere,
Cleanliness = cleanliness,
Facilities = facilities,
Location = location.y,
Security = security,
Staff = staff,
ValueForMoney = valueformoney
)
runApp('C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/mds_pds_group_f')
runApp('C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/mds_pds_group_f')
runApp('C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/mds_pds_group_f')
runApp('C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/mds_pds_group_f')
runApp('C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/mds_pds_group_f')
?addLegend
runApp('C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/mds_pds_group_f')
runApp('C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/mds_pds_group_f')
runApp()
runApp('C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/mds_pds_group_f')
runApp('C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/mds_pds_group_f')
runApp('C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/mds_pds_group_f')
runApp('C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/mds_pds_group_f')
runApp()
runApp('C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/mds_pds_group_f')
runApp('C:/Users/Gigabyte/Google Drive/04 Master DS/WQD7001 PRINCIPLES OF DATA SCIENCE/Group Assignment/mds_pds_group_f')
